version: '3.8'
services:
    pfcp-kitchen-sink:
        container_name: "pfcp-kitchen-sink"
        image: tariromukute/pfcp-kitchen-sink:latest
        volumes:
            - ./sessions-oai-upf.yaml:/app/sessions.yaml
        command: ./pfcpclient -r 192.168.70.134:8805 -s sessions.yaml
        # command: tail -f /dev/null
        depends_on:
            # - oai-upf
            - edgecomllc-eupf
        networks:
            public_net:
                ipv4_address: 192.168.70.131
    tc-gtpu-tnl:
        privileged: true
        # platform: linux/amd64
        container_name: "tc-gtpu-tnl"
        image: tariromukute/tc-gtpu:latest
        command: tail -f /dev/null
        volumes:
            - /sys/kernel/debug/:/sys/kernel/debug/
            - /sys/fs/bpf:/sys/fs/bpf
            - /Users/tariromukute/Documents/phd/tc-gtpu:/home
        devices:
            - /dev/net/tun:/dev/net/tun
        # cap_add:
        #     - NET_ADMIN
        #     - SYS_ADMIN
        # cap_drop:
        #     - ALL
        depends_on:
            # - oai-upf
            - edgecomllc-eupf
            - pfcp-kitchen-sink
        networks:
            n6_net:
                ipv4_address: 192.168.72.130
            public_net:
                ipv4_address: 192.168.70.130
    # oai-upf:
    #     container_name: "oai-upf"
    #     image: tariromukute/oai-upf-dev:latest
    #     command: tail -f /dev/null
    #     volumes:
    #         - ./basic_config.yaml:/openair-upf/etc/config.yaml
    #         - /home/ubuntu/oai-cn5g-upf:/home
    #     environment:
    #         - TZ=Europe/Paris
    #         - N6_MAC=02:42:ac:11:65:43
    #         - LAN_MAC=02:42:ac:11:65:44
    #     cap_add:
    #         - NET_ADMIN
    #         - SYS_ADMIN
    #     cap_drop:
    #         - ALL
    #     privileged: true
    #     networks:
    #         public_net:
    #             ipv4_address: 192.168.70.134
    #         n6_net:
    #             ipv4_address: 192.168.72.134
    #             mac_address: 02:42:ac:11:65:43
    edgecomllc-eupf:
        platform: linux/amd64
        container_name: "edgecomllc-eupf"
        image: ghcr.io/edgecomllc/eupf:main
        entrypoint:
        - /bin/sh
        - -c
        - |
            ip route del default;
            ip route add default via 192.168.72.138 dev eth0 &&
            sh /app/bin/entrypoint.sh
        environment:
            - UPF_INTERFACE_NAME=eth1,eth0
            - UPF_XDP_ATTACH_MODE=generic
            - UPF_API_ADDRESS=:8080
            - UPF_PFCP_ADDRESS=:8805
            - UPF_METRICS_ADDRESS=:9091
            - UPF_PFCP_NODE_ID=192.168.70.134
            - UPF_N3_ADDRESS=192.168.70.134
            - UPF_UEIP_POOL=12.1.1.0/24
            - UPF_LOGGING_LEVEL=debug
        cap_add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE # setrlimit
        # cap_drop:
        #     - ALL
        ports:
            - "127.0.0.1:8081:8081"
            - "127.0.0.1:8880:8080"
            - "127.0.0.1:9090:9090"
        sysctls:
            - net.ipv4.conf.all.forwarding=1
        privileged: true
        networks:
            public_net:
                ipv4_address: 192.168.70.134
            n6_net:
                ipv4_address: 192.168.72.134
    n6-lan:
        platform: linux/amd64
        privileged: true
        init: true
        container_name: "n6-lan"
        image: tariromukute/n6-lan-simple:latest
        command: 
        - /bin/bash
        - -c
        - |
            sh testovs.sh
            ovs-vsctl add-port brovs1 eth1
            ip addr flush dev eth1 && ip addr add 192.168.72.138/26 dev brovs1 && ip link set brovs1 up
            iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
            ip route add 12.1.1.0/24 via 192.168.72.134 dev brovs1
            tail -f /dev/null
        # command:  tail -f /dev/null
        # command: ["/bin/bash", "-c", "trap : SIGTERM SIGINT; sleep infinity & wait"]
        # apt-get install kmod
        # network_mode: host
        # pid: 'host'
        # ovs-vsctl add-br brovs1
        # ip route add default via 192.168.72.129 dev brovs1
        devices:
            - /dev/net/tun:/dev/net/tun # https://docs.openvswitch.org/en/stable/intro/install/userspace/#building-and-installing
        volumes:
            - /lib/modules:/lib/modules
        networks:
            # public_net:
            #     ipv4_address: 192.168.70.138
            n6_net:
                ipv4_address: 192.168.72.138
            data_net:
                ipv4_address: 192.168.73.138
    # oai-ext-dn:
    #     privileged: true
    #     init: true
    #     container_name: "oai-ext-dn"
    #     image: tariromukute/trf-gen-cn5g:latest
    #     entrypoint: /bin/bash -c \
    #           "ip link set dev eth0 xdpgeneric obj /tmp/nsh-decap.bpf.o sec xdp_nsh_decap;"\
    #           "iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE;"\
    #           "ip route add 12.1.1.0/24 via 192.168.72.134 dev eth0; ip route; sleep infinity"
    #     command: ["/bin/bash", "-c", "trap : SIGTERM SIGINT; sleep infinity & wait"]
    #     healthcheck:
    #         test: /bin/bash -c "iptables -L -t nat | grep MASQUERADE"
    #         interval: 10s
    #         timeout: 5s
    #         retries: 5
    #     networks:
    #         public_net:
    #             ipv4_address: 192.168.70.135
    #         n6_net:
    #             ipv4_address: 192.168.72.135
    #             mac_address: 02:42:ac:11:65:44
    #         # data_net:
    #         #     ipv4_address: 192.168.73.135
    #         #     mac_address: 02:42:ac:11:65:45

    iperf3:
        privileged: true
        platform: linux/amd64
        container_name: "iperf3"
        image: ubuntu:jammy
        # command: tail -f /dev/null
        command: 
        - /bin/bash
        - -c
        - |
            apt update -y
            apt install iperf3 -y
            iperf3 -s
        cap_add:
            - NET_ADMIN
        networks:
            data_net:
                ipv4_address: 192.168.73.137

    # dropwatch:
    #     privileged: true
    #     platform: linux/amd64
    #     container_name: "dropwatch"
    #     image: ubuntu:jammy
    #     command: tail -f /dev/null
    #     volumes:
    #     - /usr/src:/usr/src:ro 
    #     - /lib/modules/:/lib/modules:ro 
    #     - /sys/:/sys/:rw 
    #     pid: 'host'
    #     network_mode: host

networks:
    public_net:
        driver: bridge
        name: demo-oai-public-net
        ipam:
            config:
                - subnet: 192.168.70.128/26
        driver_opts:
            com.docker.network.bridge.name: "demo-oai"
    n3_net:
        driver: bridge
        name: demo-oai-n3-net
        ipam:
            config:
                - subnet: 192.168.71.128/26
        driver_opts:
            com.docker.network.bridge.name: "demo-n3"
    n6_net:
        driver: bridge
        name: demo-oai-n6-net
        ipam:
            config:
                - subnet: 192.168.72.128/26
        driver_opts:
            com.docker.network.bridge.name: "demo-n6"
    data_net:
        driver: bridge
        name: demo-oai-data-net
        ipam:
            config:
                - subnet: 192.168.73.128/26
        driver_opts:
            com.docker.network.bridge.name: "demo-dn"